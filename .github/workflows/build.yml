name: Build

on:
  push:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        goos: [linux, windows]
        goarch: [amd64]
        include:
          - goos: linux
            goarch: s390x
          - goos: linux
            goarch: arm64

    name: Build artifacts
    runs-on: ubuntu-latest
    container:
      image: goreleaser/goreleaser-cross:v1.24
    steps:
      - run: |
          apt update && apt install unzip curl -y
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          chmod +x /usr/bin/yq

      - run: git config --global --add safe.directory /__w/nezha/nezha

      - uses: actions/checkout@v4

      - name: Prepare frontends' dists
        run: |
          chmod +x ./script/fetch-frontends.sh && ./script/fetch-frontends.sh

      - name: Fetch IPInfo GeoIP Database
        env:
          IPINFO_TOKEN: ${{ secrets.IPINFO_TOKEN }}
        run: |
          rm pkg/geoip/geoip.db
          wget -qO pkg/geoip/geoip.db https://ipinfo.io/data/free/country.mmdb?token=${IPINFO_TOKEN}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"

      - name: generate swagger docs
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest
          swag init --pd -d . -g ./cmd/dashboard/main.go -o ./cmd/dashboard/docs --parseGoList=false

      - name: Build
        uses: goreleaser/goreleaser-action@v6
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}
        with:
          distribution: goreleaser
          version: "~> v2"
          args: build --single-target --clean --skip=validate --snapshot

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            ./dist/*/*
